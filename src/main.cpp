#include <iostream>
#include "fullMatrix.hpp"
#include "QR_Decomposition.hpp"


int main(){

Eigen::MatrixXd A(7,5);

    // Assegnazione di valori agli elementi
    A<<1, 2, 3, 7, 19,
	4, 5, 6, 7, 10,
    9, 10, 13, 12, 18,
	29, 35, 42, 15, 2,
	12, 45, 343, 1000, 2,
	12, 68, 89, 100, 45,
	1, 3, 13, 71, 98;

    
    QR_Decomposition QR_A(A);
    QR_A.Givens_solve(QR_A.getA());
    Eigen::MatrixXd R=QR_A.getR();
    Eigen::MatrixXd Q=QR_A.getQ();

    std::cout<<Q<<std::endl;
    std::cout<<std::endl;
    std::cout<<R<<std::endl;

    //Result of the code
    /*
    0.0285365 -0.000447577  -0.00923518    0.0896866     0.860478    -0.500633            0
    0.114146   -0.0567528   -0.0207903     0.115026    -0.287365     -0.46637     0.818539
    0.256829    -0.150595   -0.0318767     0.114757     0.394358     0.713735     0.481912
    0.827559    -0.434359    -0.139914   -0.0691271     -0.10814    -0.148111    -0.261712
    0.342438     0.379367     0.858935   -0.0320763   0.00012288  -0.00219983   0.00366346
    0.342438     0.800746    -0.490707   -0.0143806  -0.00223016    0.0214461   0.00875919
   0.0285365    0.0178733      0.01807     0.979562   -0.0988994   0.00677606    -0.170795

 35.0428  70.9418  187.171  395.202  26.8529
       0  54.5827  181.079  451.987  34.3884
       0        0  244.734  808.456 -19.8301
       0        0        0  37.8078  100.067
       0        0        0        0  10.5653
       0        0        0        0        0
       0        0        0        0        0
    */

    //Result of matlab
    /*
    Q =

  Columns 1 through 6

   -0.0285   -0.0004   -0.0092    0.0897    0.8605    0.4963
   -0.1141   -0.0568   -0.0208    0.1150   -0.2874    0.5695
   -0.2568   -0.1506   -0.0319    0.1148    0.3944   -0.6445
   -0.8276   -0.4344   -0.1399   -0.0691   -0.1081    0.1126
   -0.3424    0.3794    0.8589   -0.0321    0.0001    0.0027
   -0.3424    0.8007   -0.4907   -0.0144   -0.0022   -0.0201
   -0.0285    0.0179    0.0181    0.9796   -0.0989   -0.0291

  Column 7

    0.0655
   -0.7505
   -0.5712
    0.2788
   -0.0033
   -0.0115
    0.1684

R =

  -35.0428  -70.9418 -187.1710 -395.2021  -26.8529
         0   54.5827  181.0788  451.9873   34.3884
         0         0  244.7335  808.4562  -19.8301
         0         0         0   37.8078  100.0675
         0         0         0         0   10.5653
         0         0         0         0         0
         0         0         0         0         0


*/

// Assegnazione di valori agli elementi
    Eigen::MatrixXd B(4,3);
        B<< 1, -1, 4,
            1, 4, -2,
            1, 4, 2,
            1, -1, 0;

    
    QR_Decomposition QR_B(B);
    QR_B.Givens_solve(QR_B.getA());
    Eigen::MatrixXd R2=QR_B.getR();
    Eigen::MatrixXd Q2=QR_B.getQ();

    std::cout<<Q2<<std::endl;
    std::cout<<std::endl;
    std::cout<<R2<<std::endl;

//C++ results:
/*
Q=
0.5 -0.5  0.5 -0.5
 0.5  0.5 -0.5 -0.5
 0.5  0.5  0.5  0.5
 0.5 -0.5 -0.5  0.5

 R=
 2  3  2
 0  5 -2
 0  0  4
 0  0  0

 Matlab results:
 Q =

   -0.5000    0.5000   -0.5000   -0.5000
   -0.5000   -0.5000    0.5000   -0.5000
   -0.5000   -0.5000   -0.5000    0.5000
   -0.5000    0.5000    0.5000    0.5000


R =

   -2.0000   -3.0000   -2.0000
         0   -5.0000    2.0000
         0         0   -4.0000
         0         0         0
*/

	return 0;
}
